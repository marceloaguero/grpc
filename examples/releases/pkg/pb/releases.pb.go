// Code generated by protoc-gen-go. DO NOT EDIT.
// source: releases.proto

package releases

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetReleaseInfoRequest struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseInfoRequest) Reset()         { *m = GetReleaseInfoRequest{} }
func (m *GetReleaseInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleaseInfoRequest) ProtoMessage()    {}
func (*GetReleaseInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b86db821e9daf711, []int{0}
}

func (m *GetReleaseInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseInfoRequest.Unmarshal(m, b)
}
func (m *GetReleaseInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetReleaseInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseInfoRequest.Merge(m, src)
}
func (m *GetReleaseInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleaseInfoRequest.Size(m)
}
func (m *GetReleaseInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseInfoRequest proto.InternalMessageInfo

func (m *GetReleaseInfoRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ReleaseInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ReleaseDate          string   `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	ReleaseNotesUrl      string   `protobuf:"bytes,3,opt,name=release_notes_url,json=releaseNotesUrl,proto3" json:"release_notes_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseInfo) Reset()         { *m = ReleaseInfo{} }
func (m *ReleaseInfo) String() string { return proto.CompactTextString(m) }
func (*ReleaseInfo) ProtoMessage()    {}
func (*ReleaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b86db821e9daf711, []int{1}
}

func (m *ReleaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseInfo.Unmarshal(m, b)
}
func (m *ReleaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseInfo.Marshal(b, m, deterministic)
}
func (m *ReleaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseInfo.Merge(m, src)
}
func (m *ReleaseInfo) XXX_Size() int {
	return xxx_messageInfo_ReleaseInfo.Size(m)
}
func (m *ReleaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseInfo proto.InternalMessageInfo

func (m *ReleaseInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ReleaseInfo) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *ReleaseInfo) GetReleaseNotesUrl() string {
	if m != nil {
		return m.ReleaseNotesUrl
	}
	return ""
}

type ListReleasesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReleasesRequest) Reset()         { *m = ListReleasesRequest{} }
func (m *ListReleasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReleasesRequest) ProtoMessage()    {}
func (*ListReleasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b86db821e9daf711, []int{2}
}

func (m *ListReleasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesRequest.Unmarshal(m, b)
}
func (m *ListReleasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesRequest.Marshal(b, m, deterministic)
}
func (m *ListReleasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesRequest.Merge(m, src)
}
func (m *ListReleasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReleasesRequest.Size(m)
}
func (m *ListReleasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesRequest proto.InternalMessageInfo

type ListReleasesResponse struct {
	Releases             []*ReleaseInfo `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListReleasesResponse) Reset()         { *m = ListReleasesResponse{} }
func (m *ListReleasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReleasesResponse) ProtoMessage()    {}
func (*ListReleasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b86db821e9daf711, []int{3}
}

func (m *ListReleasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesResponse.Unmarshal(m, b)
}
func (m *ListReleasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesResponse.Marshal(b, m, deterministic)
}
func (m *ListReleasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesResponse.Merge(m, src)
}
func (m *ListReleasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReleasesResponse.Size(m)
}
func (m *ListReleasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesResponse proto.InternalMessageInfo

func (m *ListReleasesResponse) GetReleases() []*ReleaseInfo {
	if m != nil {
		return m.Releases
	}
	return nil
}

func init() {
	proto.RegisterType((*GetReleaseInfoRequest)(nil), "releases.GetReleaseInfoRequest")
	proto.RegisterType((*ReleaseInfo)(nil), "releases.ReleaseInfo")
	proto.RegisterType((*ListReleasesRequest)(nil), "releases.ListReleasesRequest")
	proto.RegisterType((*ListReleasesResponse)(nil), "releases.ListReleasesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoReleasesClient is the client API for GoReleases service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoReleasesClient interface {
	GetReleaseInfo(ctx context.Context, in *GetReleaseInfoRequest, opts ...grpc.CallOption) (*ReleaseInfo, error)
	ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error)
}

type goReleasesClient struct {
	cc *grpc.ClientConn
}

func NewGoReleasesClient(cc *grpc.ClientConn) GoReleasesClient {
	return &goReleasesClient{cc}
}

func (c *goReleasesClient) GetReleaseInfo(ctx context.Context, in *GetReleaseInfoRequest, opts ...grpc.CallOption) (*ReleaseInfo, error) {
	out := new(ReleaseInfo)
	err := c.cc.Invoke(ctx, "/releases.GoReleases/GetReleaseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goReleasesClient) ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error) {
	out := new(ListReleasesResponse)
	err := c.cc.Invoke(ctx, "/releases.GoReleases/ListReleases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoReleasesServer is the server API for GoReleases service.
type GoReleasesServer interface {
	GetReleaseInfo(context.Context, *GetReleaseInfoRequest) (*ReleaseInfo, error)
	ListReleases(context.Context, *ListReleasesRequest) (*ListReleasesResponse, error)
}

func RegisterGoReleasesServer(s *grpc.Server, srv GoReleasesServer) {
	s.RegisterService(&_GoReleases_serviceDesc, srv)
}

func _GoReleases_GetReleaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoReleasesServer).GetReleaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/releases.GoReleases/GetReleaseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoReleasesServer).GetReleaseInfo(ctx, req.(*GetReleaseInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoReleases_ListReleases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReleasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoReleasesServer).ListReleases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/releases.GoReleases/ListReleases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoReleasesServer).ListReleases(ctx, req.(*ListReleasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoReleases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "releases.GoReleases",
	HandlerType: (*GoReleasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReleaseInfo",
			Handler:    _GoReleases_GetReleaseInfo_Handler,
		},
		{
			MethodName: "ListReleases",
			Handler:    _GoReleases_ListReleases_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "releases.proto",
}

func init() { proto.RegisterFile("releases.proto", fileDescriptor_b86db821e9daf711) }

var fileDescriptor_b86db821e9daf711 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0xcd, 0x49,
	0x4d, 0x2c, 0x4e, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x0c,
	0xb9, 0x44, 0xdd, 0x53, 0x4b, 0x82, 0x20, 0x5c, 0xcf, 0xbc, 0xb4, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2,
	0xd4, 0xe2, 0x12, 0x21, 0x09, 0x2e, 0xf6, 0xb2, 0xd4, 0xa2, 0xe2, 0xcc, 0xfc, 0x3c, 0x09, 0x46,
	0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0xa9, 0x8c, 0x8b, 0x1b, 0x49, 0x3d, 0x6e, 0x85, 0x42,
	0x8a, 0x5c, 0x3c, 0x50, 0x7b, 0xe2, 0x53, 0x12, 0x4b, 0x52, 0x25, 0x98, 0xc0, 0xd2, 0xdc, 0x50,
	0x31, 0x97, 0xc4, 0x92, 0x54, 0x21, 0x2d, 0x2e, 0x41, 0x98, 0x92, 0xbc, 0xfc, 0x92, 0xd4, 0xe2,
	0xf8, 0xd2, 0xa2, 0x1c, 0x09, 0x66, 0xb0, 0x3a, 0x7e, 0xa8, 0x84, 0x1f, 0x48, 0x3c, 0xb4, 0x28,
	0x47, 0x49, 0x94, 0x4b, 0xd8, 0x27, 0xb3, 0x18, 0xe6, 0xd6, 0x62, 0xa8, 0x43, 0x95, 0x3c, 0xb9,
	0x44, 0x50, 0x85, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x0c, 0xb9, 0xe0, 0xbe, 0x94, 0x60,
	0x54, 0x60, 0xd6, 0xe0, 0x36, 0x12, 0xd5, 0x83, 0x07, 0x03, 0xb2, 0x87, 0xe1, 0xca, 0x8c, 0x56,
	0x32, 0x72, 0x71, 0xb9, 0xe7, 0xc3, 0x4c, 0x12, 0xf2, 0xe2, 0xe2, 0x43, 0x0d, 0x1b, 0x21, 0x79,
	0x84, 0x09, 0x58, 0x43, 0x4d, 0x0a, 0xbb, 0x15, 0x4a, 0x0c, 0x42, 0xfe, 0x5c, 0x3c, 0xc8, 0xae,
	0x14, 0x92, 0x45, 0x28, 0xc4, 0xe2, 0x29, 0x29, 0x39, 0x5c, 0xd2, 0x10, 0xcf, 0x29, 0x31, 0x24,
	0xb1, 0x81, 0x63, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x77, 0x83, 0x59, 0xdb, 0x01,
	0x00, 0x00,
}
